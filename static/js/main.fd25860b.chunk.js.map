{"version":3,"sources":["components/CurrencyButton/CurrencyButton.tsx","store/currency.ts","store/stopsFilter.ts","store/index.ts","components/ChooseCurrency/ChooseCurrency.tsx","helpers/filtersHelper.ts","components/StopFilterItem/StopFilterItem.tsx","components/ChooseStopsAmount/ChooseStopsAmount.tsx","helpers/dateHelper.ts","components/Details/Details.tsx","components/TicketDetails/TicketDetails.tsx","helpers/TicketDetailsHelper.ts","helpers/FormBuyTicketHelper.ts","components/Input/Input.tsx","components/FormBuyTicket/FormBuyTicket.tsx","components/ModalWindow/ModalWindow.tsx","components/Loader/Loader.tsx","api/CurrencyRates.ts","components/Ticket/Ticket.tsx","helpers/TicketListHelper.ts","components/TicketsList/TicketsList.tsx","App.tsx","index.tsx"],"names":["CurrencyButton","changeSelectedCurrency","selectedCurrency","currency","className","classNames","onClick","possibleCurrencies","rub","usd","eur","initialState","setCurrency","currencyActions","value","type","currencyReducer","action","possibleFilterValues","withoutStops","oneStop","twoStops","threeStops","Object","values","addFilter","deleteFilter","setAllFilters","clearFilters","stopsFilterActions","stopsFilterReducer","stopsFilter","includes","filter","item","getters","state","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ChooseCurrency","useSelector","dispatch","useDispatch","useCallback","currencies","map","getIsAllFilters","filters","isFilterActive","checkAll","StopFilterItem","handleSingleFilter","ChooseStopsAmount","stopsOptions","handleAllFilters","returnValidDate","date","month","weekDay","result","getDate","getFullYear","Details","time","place","place_name","validDate","useMemo","dateItems","split","Date","createDateObj","moment","locale","format","slice","toUpperCase","defineWeekDay","defineMonth","dateTime","TicketDetails","React","memo","number","ticket","isModal","origin","origin_name","destination","destination_name","departure_date","departure_time","arrival_date","arrival_time","stops","emailRegexpPattern","phoneNumberPattern","passportNumberPattern","RegExp","handleInputsValid","setAreInputsValid","input","prevState","handleNameValidate","Input","inputsValidators","inputValues","setInputValues","areInputsValid","passportNumber","name","title","placeholder","htmlFor","id","required","onChange","event","target","handleInputValues","initialInputValues","firstName","secondName","email","phone","inputNames","initialAreInputsValid","defaultPhoneNumber","defaultPassportNumber","FormBuyTicket","handleSetFormActive","useState","buttonDisabled","test","toLowerCase","validateEmail","validatePhoneNumber","validatePassportNumber","inputs","onSubmit","preventDefault","disabled","ModalWindow","handleModalVisability","preparedPrice","currencySign","isFormActive","setIsFormActive","Loader","getRates","fetch","then","response","json","catch","console","log","initialExhangeRates","NaN","currencySigns","Ticket","modalVisability","setModalVisability","exchangeRates","setExchangeRates","price","currentCurrency","Math","ceil","useEffect","a","rates","USD","error","usdRate","EUR","eurRate","isNaN","ticketsFromServer","tickets","uuidv4","convertedFilters","TicketsList","preparedTicketsList","prepareTicketsList","length","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd25860b.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport { CurrencyState } from '../../store/currency';\n\nimport './CurrencyButton.scss';\n\nexport const CurrencyButton = ({\n  changeSelectedCurrency,\n  selectedCurrency,\n  currency,\n}: {\n  changeSelectedCurrency: Function;\n  selectedCurrency: CurrencyState;\n  currency: CurrencyState;\n}) => (\n  <button\n    className={classNames('CurrencyButton', {\n      'CurrencyButton--active': selectedCurrency === currency,\n    })}\n    onClick={() => {\n      changeSelectedCurrency(currency);\n    }}\n  >\n    {currency}\n  </button>\n);\n","import { AnyAction } from 'redux';\n\nexport const possibleCurrencies = {\n  rub: 'Rub',\n  usd: 'Usd',\n  eur: 'Eur',\n};\n\nexport type CurrencyState = string;\nconst initialState: CurrencyState = possibleCurrencies.rub;\n\nexport const setCurrency = 'currency/setCurrency';\n\ninterface ActionCreatorsTypes {\n  [setCurrency]: (value: string) => { type: string; value: string };\n}\n\nexport const currencyActions: ActionCreatorsTypes = {\n  [setCurrency]: (value) => ({\n    type: setCurrency,\n    value,\n  }),\n};\n\nconst currencyReducer = (\n  currency = initialState,\n  action: AnyAction\n): CurrencyState => {\n  const { type, value } = action;\n\n  switch (type) {\n    case setCurrency:\n      return value;\n\n    default:\n      return currency;\n  }\n};\n\nexport default currencyReducer;\n","import { AnyAction } from 'redux';\n\nexport const possibleFilterValues = {\n  withoutStops: 'Без пересадок',\n  oneStop: '1 пересадка',\n  twoStops: '2 пересадки',\n  threeStops: '3 пересадки',\n};\n\nexport type StopsFilterState = string[];\n\nconst initialState: StopsFilterState = Object.values(possibleFilterValues);\n\n//#region ActionTypes\nexport const addFilter = 'stopsFilter/addFilter';\nexport const deleteFilter = 'stopsFilter/deleteFilter';\nexport const setAllFilters = 'stopsFilter/setAllFilters';\nexport const clearFilters = 'stopsFilter/clearFilters';\n//#endregion\n\ninterface ActionCreatorsTypes {\n  [addFilter]: (value: string) => { type: string; value: string };\n  [deleteFilter]: (value: string) => { type: string; value: string };\n  [setAllFilters]: () => { type: string };\n  [clearFilters]: () => { type: string };\n}\n\nexport const stopsFilterActions: ActionCreatorsTypes = {\n  [addFilter]: (value) => ({\n    type: addFilter,\n    value,\n  }),\n  [deleteFilter]: (value) => ({\n    type: deleteFilter,\n    value,\n  }),\n  [setAllFilters]: () => ({\n    type: setAllFilters,\n  }),\n  [clearFilters]: () => ({\n    type: clearFilters,\n  }),\n};\n\nconst stopsFilterReducer = (\n  stopsFilter = initialState,\n  action: AnyAction\n): StopsFilterState => {\n  const { type, value } = action;\n\n  switch (type) {\n    case addFilter:\n      if (stopsFilter.includes(value)) {\n        return stopsFilter;\n      }\n\n      return [...stopsFilter, value];\n\n    case deleteFilter:\n      return stopsFilter.filter((item) => item !== value);\n\n    case setAllFilters:\n      return Object.values(possibleFilterValues);\n\n    case clearFilters:\n      return [];\n\n    default:\n      return stopsFilter;\n  }\n};\n\nexport default stopsFilterReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport currencyReducer, { CurrencyState } from './currency';\nimport stopsFilterReducer, { StopsFilterState } from './stopsFilter';\n\ninterface initialState {\n  currency: CurrencyState;\n  stopsFilter: StopsFilterState;\n}\n\nexport const getters = {\n  getCurrency: (state: initialState): CurrencyState => state.currency,\n  getStopsFilter: (state: initialState): StopsFilterState => state.stopsFilter,\n};\n\nconst rootReducer = combineReducers({\n  currency: currencyReducer,\n  stopsFilter: stopsFilterReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { CurrencyButton } from '../CurrencyButton';\n\nimport { getters } from '../../store';\nimport {\n  possibleCurrencies,\n  currencyActions,\n  setCurrency,\n  CurrencyState,\n} from '../../store/currency';\n\nimport './ChooseCurrency.scss';\n\nexport const ChooseCurrency = () => {\n  const selectedCurrency = useSelector(getters.getCurrency);\n  const dispatch = useDispatch();\n\n  const changeSelectedCurrency = useCallback(\n    (value: CurrencyState) => {\n      dispatch(currencyActions[setCurrency](value));\n    },\n    [dispatch]\n  );\n\n  const currencies = Object.values(possibleCurrencies);\n\n  return (\n    <div className=\"ChooseCurrency\">\n      <h3 className=\"ChooseCurrency__title\">Валюта</h3>\n\n      <div className=\"ChooseCurrency__selectors\">\n        {currencies.map((currency) => (\n          <CurrencyButton\n            key={currency}\n            changeSelectedCurrency={changeSelectedCurrency}\n            selectedCurrency={selectedCurrency}\n            currency={currency}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import {\n  possibleFilterValues,\n  StopsFilterState,\n  stopsFilterActions,\n  clearFilters,\n  setAllFilters,\n  deleteFilter,\n  addFilter,\n} from '../store/stopsFilter';\n\nexport function getIsAllFilters(filters: StopsFilterState): boolean {\n  const allFilters = Object.values(possibleFilterValues);\n\n  for (const item of allFilters) {\n    if (!filters.includes(item)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const isFilterActive = (\n  filters: StopsFilterState,\n  filter: string\n): boolean => filters.includes(filter);\n\nexport const checkAll = (filters: StopsFilterState): boolean =>\n  getIsAllFilters(filters);\n\nexport const handleAllFilters = (\n  filters: StopsFilterState,\n  dispatch: Function\n) => {\n  const isAllFilters = getIsAllFilters(filters);\n\n  isAllFilters\n    ? dispatch(stopsFilterActions[clearFilters]())\n    : dispatch(stopsFilterActions[setAllFilters]());\n};\n\nexport const handleSingleFilter = (\n  filters: StopsFilterState,\n  filter: string,\n  dispatch: Function\n): void => {\n  isFilterActive(filters, filter)\n    ? dispatch(stopsFilterActions[deleteFilter](filter))\n    : dispatch(stopsFilterActions[addFilter](filter));\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { getters } from '../../store';\nimport {\n  isFilterActive,\n  handleSingleFilter,\n} from '../../helpers/filtersHelper';\n\nimport './StopFilterItem.scss';\n\nexport const StopFilterItem = ({ item }: { item: string }) => {\n  const filters = useSelector(getters.getStopsFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <li\n      className=\"StopFilterItem ChooseStopsAmount__item\"\n      onClick={() => {\n        handleSingleFilter(filters, item, dispatch);\n      }}\n    >\n      <div className=\"StopFilterItem__checkbox\">\n        <div\n          className={classNames('StopFilterItem__checkbox-icon', {\n            'StopFilterItem__checkbox-icon--active': isFilterActive(\n              filters,\n              item\n            ),\n          })}\n        ></div>\n\n        <span className=\"StopFilterItem__checkbox-text\">{item}</span>\n      </div>\n    </li>\n  );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { StopFilterItem } from '../StopFilterItem';\n\nimport { getters } from '../../store';\nimport { possibleFilterValues } from '../../store/stopsFilter';\nimport { checkAll, handleAllFilters } from '../../helpers/filtersHelper';\n\nimport './ChooseStopsAmount.scss';\n\nexport const ChooseStopsAmount = () => {\n  const filters = useSelector(getters.getStopsFilter);\n  const dispatch = useDispatch();\n\n  const stopsOptions = Object.values(possibleFilterValues);\n\n  return (\n    <div className=\"ChooseStopsAmount\">\n      <h3 className=\"ChooseStopsAmount__title\">Количество пересадок</h3>\n\n      <ul>\n        <li\n          className=\"ChooseStopsAmount__item\"\n          onClick={() => {\n            handleAllFilters(filters, dispatch);\n          }}\n        >\n          <div className=\"ChooseStopsAmount__checkbox\">\n            <div\n              className={classNames('ChooseStopsAmount__checkbox-icon', {\n                'ChooseStopsAmount__checkbox-icon--active': checkAll(filters),\n              })}\n            ></div>\n\n            <span className=\"ChooseStopsAmount__checkbox-text\">Все</span>\n          </div>\n        </li>\n\n        {stopsOptions.map((item) => (\n          <StopFilterItem key={item} item={item} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import moment from 'moment';\nimport 'moment/locale/ru';\n\nexport const createDateObj = (date: string): Date => {\n  const dateItems = date.split('.');\n\n  return new Date(`${dateItems[1]}.${dateItems[0]}.${dateItems[2]}`);\n};\n\nexport const returnValidDate = (\n  date: Date,\n  month: string,\n  weekDay: string\n): string => {\n  let result = '';\n\n  result += `${date.getDate()} `;\n  result += `${month} ` || '';\n  result += date.getFullYear();\n  result += `${weekDay ? `, ${weekDay}` : ''}`;\n\n  return result;\n};\n\nexport const defineWeekDay = (value: Date): string => {\n  moment.locale('ru');\n\n  const date = moment(value);\n  const result = date.format('llll');\n\n  return result.slice(0, 1).toUpperCase() + result.slice(1, 2);\n};\n\nexport const defineMonth = (value: Date): string => {\n  moment.locale('ru');\n\n  const date = moment(value);\n  const result = date.format('MMM');\n\n  if (result === 'май') return 'Мая';\n\n  return result.slice(0, 1).toUpperCase() + result.slice(1, 3);\n};\n","import React, { useMemo } from 'react';\n\nimport {\n  createDateObj,\n  defineWeekDay,\n  defineMonth,\n  returnValidDate,\n} from '../../helpers/dateHelper';\n\nimport './Details.scss';\n\ninterface PropsTypes {\n  time: string;\n  place: string;\n  place_name: string;\n  date: string;\n}\n\nexport const Details = ({ time, place, place_name, date }: PropsTypes) => {\n  const validDate = useMemo(() => createDateObj(date), [date]);\n  const weekDay = defineWeekDay(validDate);\n  const month = defineMonth(validDate);\n\n  return (\n    <div className=\"Details\">\n      <div className=\"Details__time-wrapper\">\n        <time dateTime={time} className=\"Details__time\">\n          {time}\n        </time>\n      </div>\n\n      <div className=\"Details__additional-info-wrapper\">\n        <p className=\"Details__place\">{`${place}, ${place_name}`}</p>\n\n        <time dateTime={`${date} ${time}`} className=\"Details__date\">\n          {returnValidDate(validDate, month, weekDay)}\n        </time>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { TicketInterface } from '../../types';\nimport { Details } from '../Details';\n\nimport { defineWord } from '../../helpers/TicketDetailsHelper';\n\nimport './TicketDetails.scss';\n\nexport const TicketDetails = React.memo(\n  ({ ticket, isModal }: { ticket: TicketInterface; isModal: boolean }) => {\n    const {\n      origin,\n      origin_name,\n      destination,\n      destination_name,\n      departure_date,\n      departure_time,\n      arrival_date,\n      arrival_time,\n      stops,\n    }: TicketInterface = ticket;\n\n    return (\n      <div\n        className={classNames(\n          'TicketDetails',\n          'Ticket__section',\n          'Ticket__section--details',\n          {\n            'Ticket__section--details--modal': isModal,\n          }\n        )}\n      >\n        <div className=\"TicketDetails__origin\">\n          <Details\n            time={departure_time}\n            place={origin}\n            place_name={origin_name}\n            date={departure_date}\n          />\n        </div>\n\n        <div className=\"TicketDetails__stops-info\">\n          <p\n            className={classNames('TicketDetails__stops-info-text', {\n              'TicketDetails__stops-info-text--modal': isModal,\n            })}\n          >\n            {`${stops} ${defineWord(stops)}`}\n          </p>\n\n          <div\n            className={classNames('TicketDetails__stops-info-decoration', {\n              'TicketDetails__stops-info-decoration--modal': isModal,\n            })}\n          >\n            <div className=\"TicketDetails__stops-info-decoration-item\"></div>\n            <div className=\"TicketDetails__stops-info-plane-icon\"></div>\n          </div>\n        </div>\n\n        <div className=\"TicketDetails__destination\">\n          <Details\n            time={arrival_time}\n            place={destination}\n            place_name={destination_name}\n            date={arrival_date}\n          />\n        </div>\n      </div>\n    );\n  }\n);\n","export const defineWord = (number: number): string => {\n  if (number === 1) return 'пересадка';\n\n  if (number > 1 && number < 5) return 'пересадки';\n\n  return 'пересадок';\n};\n","import { InputValues, ValidInputs } from '../types';\n\n//#region Patterns\nconst emailRegexpPattern =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nconst phoneNumberPattern = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\nconst passportNumberPattern = new RegExp('^([А-ЯЁ]{2})([0-9]{6})$', 'u');\n//#endregion\n\n//#region Validators\nexport const validateEmail = (email: string): boolean =>\n  emailRegexpPattern.test(email.toLowerCase());\n\nexport const validatePhoneNumber = (phone: string): boolean =>\n  phoneNumberPattern.test(phone);\n\nexport const validatePassportNumber = (passportNumber: string): boolean =>\n  passportNumberPattern.test(passportNumber);\n//#endregion\n\n//#region Handlers\nexport const handleInputsValid = (\n  setAreInputsValid: Function,\n  input: string,\n  value: boolean\n): void => {\n  setAreInputsValid(\n    (prevState: ValidInputs): ValidInputs => ({\n      ...prevState,\n      [input]: value,\n    })\n  );\n};\n\nexport const handleNameValidate = (\n  setAreInputsValid: Function,\n  input: string,\n  value: string\n): void => {\n  if (value === '' || value === ' ') {\n    handleInputsValid(setAreInputsValid, input, false);\n  } else {\n    handleInputsValid(setAreInputsValid, input, true);\n  }\n};\n\nexport const handleInputValues = (\n  setInputValues: Function,\n  input: string,\n  value: string\n): void => {\n  setInputValues(\n    (state: InputValues): InputValues => ({\n      ...state,\n      [input]: value,\n    })\n  );\n};\n//#endregion\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { handleInputValues } from '../../helpers/FormBuyTicketHelper';\nimport {\n  InputsValidatorsOption,\n  ValidInputsOption,\n  ValidInputsValues,\n  InputsInterface,\n} from '../../types';\n\nimport './Input.scss';\n\nexport const Input = ({\n  item,\n  inputsValidators,\n  inputValues,\n  setInputValues,\n  areInputsValid,\n  passportNumber,\n}: {\n  item: InputsInterface;\n  inputsValidators: InputsValidatorsOption;\n  inputValues: ValidInputsValues;\n  setInputValues: Function;\n  areInputsValid: ValidInputsOption;\n  passportNumber: string;\n}) => {\n  const { name, type, title, format, placeholder } = item;\n\n  return (\n    <div className=\"Input\">\n      <label htmlFor={name} className=\"Input__label\">\n        <h3 className=\"Input__label-text\">\n          {title}\n          {format !== '' && (\n            <span className=\"Input__format\">{` (${format})`}</span>\n          )}\n        </h3>\n\n        <input\n          id={name}\n          className={classNames('Input__input', {\n            'Input__input--valid-error': !areInputsValid[name],\n            'Input__input--valid-success':\n              areInputsValid[name] && inputValues[name] !== '',\n          })}\n          type={type}\n          name={name}\n          placeholder={placeholder}\n          required\n          value={inputValues[name]}\n          onChange={(event) => {\n            const value =\n              name === passportNumber\n                ? event.target.value.toUpperCase()\n                : event.target.value;\n\n            handleInputValues(setInputValues, name, value);\n            inputsValidators[name](value);\n          }}\n        />\n\n        <div\n          className={classNames('Input__validation-icon', {\n            'Input__validation-icon--active':\n              areInputsValid[name] && inputValues[name] !== '',\n          })}\n        ></div>\n      </label>\n    </div>\n  );\n};\n","import React, { useState, useMemo } from 'react';\n\nimport { Input } from '../Input';\n\nimport {\n  InputValues,\n  ValidInputsOption,\n  ValidInputsValues,\n  InputsValidatorsOption,\n  InputsInterface,\n} from '../../types';\n\nimport {\n  validateEmail,\n  validatePhoneNumber,\n  validatePassportNumber,\n  handleInputsValid,\n  handleNameValidate,\n} from '../../helpers/FormBuyTicketHelper';\n\nimport './FormBuyTicket.scss';\n\n//#region Constants\nconst initialInputValues: ValidInputsValues = {\n  firstName: '',\n  secondName: '',\n  email: '',\n  phone: '',\n  passportNumber: '',\n};\n\nconst inputNames: InputValues = {\n  firstName: 'firstName',\n  secondName: 'secondName',\n  email: 'email',\n  phone: 'phone',\n  passportNumber: 'passportNumber',\n};\n\nconst initialAreInputsValid: ValidInputsOption = {\n  firstName: true,\n  secondName: true,\n  email: true,\n  phone: true,\n  passportNumber: true,\n};\n\nconst defaultPhoneNumber = '123-456-7890';\nconst defaultPassportNumber = 'АБ123456';\n//#endregion\n\nexport const FormBuyTicket = React.memo(\n  ({ handleSetFormActive }: { handleSetFormActive: Function }) => {\n    const { firstName, secondName, email, phone, passportNumber }: InputValues =\n      inputNames;\n\n    const [inputValues, setInputValues] = useState(initialInputValues);\n    const [areInputsValid, setAreInputsValid] = useState(initialAreInputsValid);\n\n    const buttonDisabled = useMemo(\n      () => Object.values(areInputsValid).includes(false),\n      [areInputsValid]\n    );\n\n    const inputsValidators: InputsValidatorsOption = useMemo(\n      () => ({\n        [firstName]: (value: string): void => {\n          handleNameValidate(setAreInputsValid, firstName, value);\n        },\n\n        [secondName]: (value: string): void => {\n          handleNameValidate(setAreInputsValid, secondName, value);\n        },\n\n        [email]: (value: string): void => {\n          if (validateEmail(value)) {\n            handleInputsValid(setAreInputsValid, email, true);\n          } else {\n            handleInputsValid(setAreInputsValid, email, false);\n          }\n        },\n\n        [phone]: (value: string): void => {\n          if (validatePhoneNumber(value)) {\n            handleInputsValid(setAreInputsValid, phone, true);\n          } else {\n            handleInputsValid(setAreInputsValid, phone, false);\n          }\n        },\n\n        [passportNumber]: (value: string): void => {\n          if (validatePassportNumber(value)) {\n            handleInputsValid(setAreInputsValid, passportNumber, true);\n          } else {\n            handleInputsValid(setAreInputsValid, passportNumber, false);\n          }\n        },\n      }),\n      [email, firstName, passportNumber, phone, secondName]\n    );\n\n    const inputs: InputsInterface[] = useMemo(\n      () => [\n        {\n          name: firstName,\n          type: 'text',\n          title: 'Имя',\n          format: '',\n          placeholder: 'Введите имя',\n        },\n\n        {\n          name: secondName,\n          type: 'text',\n          title: 'Фамилия',\n          format: '',\n          placeholder: 'Введите фамилию',\n        },\n\n        {\n          name: email,\n          type: 'text',\n          title: 'Email',\n          format: '',\n          placeholder: 'aviasales@gmail.com',\n        },\n\n        {\n          name: phone,\n          type: 'text',\n          title: 'Номер телефона',\n          format: defaultPhoneNumber,\n          placeholder: defaultPhoneNumber,\n        },\n\n        {\n          name: passportNumber,\n          type: 'text',\n          title: 'Серия и номер паспорта',\n          format: defaultPassportNumber,\n          placeholder: defaultPassportNumber,\n        },\n      ],\n      [email, firstName, passportNumber, phone, secondName]\n    );\n\n    return (\n      <form\n        action=\"\"\n        className=\"FormBuyTicket\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          handleSetFormActive();\n        }}\n      >\n        {inputs.map((item: InputsInterface) => (\n          <Input\n            key={item.name}\n            item={item}\n            inputsValidators={inputsValidators}\n            inputValues={inputValues}\n            setInputValues={setInputValues}\n            areInputsValid={areInputsValid}\n            passportNumber={passportNumber}\n          />\n        ))}\n\n        <button\n          className=\"FormBuyTicket__button\"\n          type=\"submit\"\n          disabled={buttonDisabled}\n        >\n          Купить\n        </button>\n      </form>\n    );\n  }\n);\n","import React, { useState, useCallback } from 'react';\nimport classNames from 'classnames';\n\nimport { TicketInterface } from '../../types';\nimport { TicketDetails } from '../TicketDetails';\nimport { FormBuyTicket } from '../FormBuyTicket';\n\nimport './ModalWindow.scss';\n\nexport const ModalWindow = React.memo(\n  ({\n    handleModalVisability,\n    ticket,\n    preparedPrice,\n    currencySign,\n  }: {\n    handleModalVisability: Function;\n    ticket: TicketInterface;\n    preparedPrice: number;\n    currencySign: string;\n  }) => {\n    const [isFormActive, setIsFormActive] = useState(true);\n\n    const handleSetFormActive = useCallback(() => {\n      setIsFormActive((prevState: boolean): boolean => !prevState);\n    }, [setIsFormActive]);\n\n    return (\n      <div\n        className={classNames('ModalWindow', {\n          'ModalWindow--success': !isFormActive,\n        })}\n      >\n        <button\n          className={classNames('ModalWindow__close', {\n            'ModalWindow__close--active': !isFormActive,\n          })}\n          title=\"Закрыть окно\"\n          onClick={() => {\n            handleModalVisability();\n          }}\n        >\n          x\n        </button>\n\n        {isFormActive ? (\n          <>\n            <div className=\"ModalWindow__ticket-details\">\n              <div className=\"ModalWindow__flight-details-wrapper\">\n                <TicketDetails ticket={ticket} isModal={true} />\n              </div>\n\n              <div className=\"ModalWindow__mobile-flight-details\"></div>\n\n              <p className=\"ModalWindow__price\">\n                {`Цена билета: ${preparedPrice}${currencySign}`}\n              </p>\n            </div>\n\n            <FormBuyTicket handleSetFormActive={handleSetFormActive} />\n          </>\n        ) : (\n          <div className=\"ModalWindow__success-purchase\">\n            <h3 className=\"ModalWindow__text-success\">\n              Билет успешно приобретён\n            </h3>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n","import React from 'react';\n\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__spinner\" />\n\n    <span className=\"Loader__text\">Загрузка цены...</span>\n  </div>\n);\n","const getRates = () => {\n  const BASE_URL = 'https://www.cbr-xml-daily.ru/latest.js';\n\n  return fetch(BASE_URL)\n    .then((response) => response.json())\n    .catch(console.log);\n};\n\nexport const getUsdRate = (): Promise<number> => {\n  return getRates()\n    .then((result) => {\n      return 1 / result.rates.USD;\n    })\n    .catch((error) => {\n      console.error(error);\n\n      return NaN;\n    });\n};\n\nexport const getEurRate = (): Promise<number> => {\n  return getRates()\n    .then((result) => {\n      return 1 / result.rates.EUR;\n    })\n    .catch((error) => {\n      console.error(error);\n\n      return NaN;\n    });\n};\n","import React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { TicketInterface } from '../../types';\nimport { TicketDetails } from '../TicketDetails';\nimport { ModalWindow } from '../ModalWindow';\nimport { Loader } from '../Loader';\n\nimport { getters } from '../../store';\nimport { possibleCurrencies } from '../../store/currency';\nimport { getUsdRate, getEurRate } from '../../api/CurrencyRates';\n\nimport './Ticket.scss';\n\n//#region Constants\nconst { rub, usd, eur } = possibleCurrencies;\n\ntype ExchangeRates = {\n  [key: string]: number;\n};\n\nconst initialExhangeRates: ExchangeRates = {\n  [rub]: 1,\n  [usd]: NaN,\n  [eur]: NaN,\n};\n\nconst currencySigns = {\n  [rub]: '₽',\n  [usd]: '$',\n  [eur]: '€',\n};\n//#endregion\n\nexport const Ticket = React.memo(({ ticket }: { ticket: TicketInterface }) => {\n  const [modalVisability, setModalVisability] = useState(false);\n  const [exchangeRates, setExchangeRates] = useState(initialExhangeRates);\n\n  const { price }: TicketInterface = ticket;\n  const currentCurrency = useSelector(getters.getCurrency);\n  const currencySign = useMemo(\n    () => currencySigns[currentCurrency],\n    [currentCurrency]\n  );\n  const preparedPrice = useMemo(\n    () => Math.ceil(+(price / exchangeRates[currentCurrency])) || NaN,\n    [currentCurrency, exchangeRates, price]\n  );\n\n  useEffect(() => {\n    (async function () {\n      const usdRate = await getUsdRate();\n      const eurRate = await getEurRate();\n\n      setExchangeRates((prevState) => ({\n        ...prevState,\n        [usd]: usdRate,\n        [eur]: eurRate,\n      }));\n    })();\n  }, []);\n\n  const handleModalVisability = useCallback(() => {\n    setModalVisability((state) => !state);\n  }, [setModalVisability]);\n\n  return (\n    <>\n      <div className=\"Ticket\">\n        <div className=\"Ticket__section Ticket__section--main-info\">\n          <div className=\"Ticket__carrier-logo\"></div>\n\n          <button\n            className=\"Ticket__price\"\n            disabled={isNaN(preparedPrice)}\n            onClick={() => {\n              handleModalVisability();\n            }}\n          >\n            {isNaN(preparedPrice) ? (\n              <Loader />\n            ) : (\n              <>\n                Купить\n                <br />\n                за {preparedPrice}\n                {currencySign}\n              </>\n            )}\n          </button>\n        </div>\n\n        <TicketDetails ticket={ticket} isModal={false} />\n      </div>\n\n      {modalVisability && (\n        <div className=\"Ticket__modal-wrapper\">\n          <ModalWindow\n            handleModalVisability={handleModalVisability}\n            ticket={ticket}\n            preparedPrice={preparedPrice}\n            currencySign={currencySign}\n          />\n        </div>\n      )}\n    </>\n  );\n});\n","import { v4 as uuidv4 } from 'uuid';\n\nimport { possibleFilterValues, StopsFilterState } from '../store/stopsFilter';\nimport data from '../data/tickets.json';\nimport { TicketInterface } from '../types';\n\nconst ticketsFromServer = data.tickets.map((item) => ({\n  ...item,\n  id: uuidv4(),\n}));\nconst { withoutStops, oneStop, twoStops, threeStops } = possibleFilterValues;\nconst convertedFilters = {\n  [withoutStops]: 0,\n  [oneStop]: 1,\n  [twoStops]: 2,\n  [threeStops]: 3,\n};\n\nexport const prepareTicketsList = (\n  filters: StopsFilterState\n): TicketInterface[] => {\n  return ticketsFromServer.filter((ticket) => {\n    for (const filter of filters) {\n      if (ticket.stops === convertedFilters[filter]) return true;\n    }\n\n    return false;\n  });\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Ticket } from '../Ticket';\n\nimport { getters } from '../../store';\nimport { prepareTicketsList } from '../../helpers/TicketListHelper';\n\nimport './TicketsList.scss';\n\nexport const TicketsList = () => {\n  const filters = useSelector(getters.getStopsFilter);\n  const preparedTicketsList = prepareTicketsList(filters);\n\n  return (\n    <div className=\"TicketsList\">\n      <ul className=\"TicketsList__list\">\n        {preparedTicketsList.length === 0 ? (\n          <p className=\"TicketsList__not-found\">Tickets not found</p>\n        ) : (\n          preparedTicketsList.map((ticket) => (\n            <li className=\"TicketsList__item\" key={ticket.id}>\n              <Ticket ticket={ticket} />\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { ChooseCurrency } from './components/ChooseCurrency';\nimport { ChooseStopsAmount } from './components/ChooseStopsAmount';\nimport { TicketsList } from './components/TicketsList';\n\nimport './App.scss';\n\nexport const App = () => (\n  <div className=\"App\">\n    <header className=\"App__header\">\n      <h1 className=\"App__title visually-hidden\">Aviasales</h1>\n\n      <div className=\"App__logo\"></div>\n    </header>\n\n    <main className=\"App__main\">\n      <section className=\"App__search-params\">\n        <h2 className=\"visually-hidden\">Filtering ans sorting of tickets</h2>\n\n        <div className=\"App__currency\">\n          <ChooseCurrency />\n        </div>\n\n        <ChooseStopsAmount />\n      </section>\n\n      <section className=\"App__tickets-list\">\n        <h2 className=\"visually-hidden\">Tickets</h2>\n\n        <TicketsList />\n      </section>\n    </main>\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { App } from './App';\n\nimport store from './store';\n\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}